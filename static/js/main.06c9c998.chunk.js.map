{"version":3,"sources":["components/homePage.js","components/projects.js","components/contact.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","className","lib","col","src","alt","href","target","Component","Projects","shadow","style","display","width","margin","height","color","background","zIndex","border","colored","minWidth","Contacts","aria-hidden","Main","react_router","exact","path","component","App","title","scroll","react_router_dom","to","main","Boolean","window","location","hostname","match","ReactDOM","render","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06c9c998.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { Grid, Cell } from 'react-mdl'\n\nclass HomePage extends Component {\n  render () {\n    return (\n      <div className='home-container'>\n        <Grid className='landing-grid'>\n          <Cell col={12}>\n            <img\n            src='http://streitcouncil.org/uploads/images/Alex%20Tilatti.jpg'\n            className='profile-picture'\n            alt='profilepic'\n            />\n            <div className='banner-text'><h1>Full Stack Developer</h1>\n              <hr/>\n              <p><b>Front End</b>: HTML | CSS | JavaScript </p>\n              <p><b>Frameworks and Libraries</b>: BootStrap | SCSS | Node JS | Express | React | Ruby | Bootstrap | AWS CLI | AJAX | KNEX | JQUERY </p>\n              <p><b>Systems, CMS, Databases</b>: MongoDB | PSQL | GIT | Ruby on Rails | AWS S3 Storage</p>\n              <div className=\"button-container\">\n                <a\n                  href=\"https://github.com/at0082a\"\n                  target=\"_blank\"\n                  className=\"rounded-btn\"\n                >\n                  {\" \"}\n                  <img\n                    className=\"button-icon\"\n                    src=\"http://i64.tinypic.com/10xqzxl.png\"\n                  />\n                </a>\n                <a\n                  href=\"https://www.linkedin.com/in/alexander-tilatti-7670a649/\"\n                  target=\"_blank\"\n                  className=\"rounded-btn\"\n                >\n                  <img\n                    className=\"button-icon\"\n                    src=\"http://i66.tinypic.com/2zsb5ls.png\"\n                  />\n                </a>\n                <a\n                  href=\"https://resume.creddle.io/resume/cuhvvpzhma7\"\n                  target=\"_blank\"\n                  className=\"rounded-btn\"\n                >\n                  <img\n                    className=\"button-icon\"\n                    src=\"http://i66.tinypic.com/2a4pheq.png\"\n                  />\n                </a>\n              </div>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default HomePage","import React, { Component } from \"react\";\nimport {Grid, Cell, Card, CardTitle, CardText, CardActions, Button, CardMenu } from \"react-mdl\";\n\n//add a new card per project page\n\nclass Projects extends Component {\n  render() {\n    return (\n        <div className=\"projects-content\">\n          <div className=\"content-grid\" />\n          <Grid className=\"projects-grid\">\n            <Cell col={3}>\n              <Card\n                shadow={5}\n                style={{\n                  display: \"flex\",\n                  width: \"450\",\n                  margin: \"auto\",\n                  height: \"400px\"\n                }}\n              >\n                <CardTitle\n                  style={{\n                    display: \"flex\",\n                    color: \"#black\",\n                    height: \"221px\",\n                    background:\n                      \"url(https://tryolabs.com/images/blog/social/react.736da783.png) center / cover\",\n                    zIndex: 1\n                  }}\n                >\n                  ChattyApp\n                </CardTitle>\n                <CardText>\n                  ChattyApp is a client-side single-page application that allows\n                  multiple users to chat with each other. Users are able to set\n                  their username and chat in real-time through through the\n                  Websocket server.\n                </CardText>\n                <CardActions border>\n                  <Button\n                    href=\"https://github.com/at0082a/Chatty-App\"\n                    target=\"_blank\"\n                    colored\n                  >\n                    GitHub\n                  </Button>\n                </CardActions>\n                <CardMenu style={{ color: \"#fff\" }} />\n              </Card>\n            </Cell>\n            <Cell col={3}>\n              <Card\n                shadow={5}\n                style={{\n                  display: \"flex\",\n                  width: \"450\",\n                  margin: \"auto\",\n                  height: \"400px\"\n                }}\n              >\n                <CardTitle\n                  style={{\n                    display: \"flex\",\n                    color: \"black\",\n                    height: \"221px\",\n                    background:\n                      \"url(https://www.techaroha.com/wp-content/uploads/2018/06/BEEVA-nodejs-1200x565.jpg) center / cover\"\n                  }}\n                >\n                  Pizza Uto\n                </CardTitle>\n                <CardText>\n                A web application for a single restaurant where a user can order food \n                for pick-up. Users can view the menu, select items to order and proceed to a check out page. Users are \n                notified of their order using Twilio via text message.\n\n\n                </CardText>\n                <CardActions border>\n                  <Button\n                    href=\"https://github.com/at0082a/midterm-project-6\"\n                    target=\"_blank\"\n                    colored\n                  >\n                    GitHub\n                  </Button>\n                </CardActions>\n                <CardMenu style={{ color: \"#fff\" }} />\n              </Card>\n            </Cell>\n            <Cell col={3}>\n              <Card\n                shadow={5}\n                style={{\n                  display: \"flex\",\n                  minWidth: \"450\",\n                  margin: \"auto\",\n                  height: \"400px\"\n                }}\n              >\n                <CardTitle\n                  style={{\n                    display: \"flex\",\n                    color: \"black\",\n                    height: \"220px\",\n                    background:\n                      \"url(https://www.techaroha.com/wp-content/uploads/2018/06/BEEVA-nodejs-1200x565.jpg) center / cover\"\n                  }}\n                >\n                  TinyApp\n                </CardTitle>\n                <CardText>\n                  TinyApp is a full stack web application built with Node and\n                  Express that allows users to shorten long URLs (à la bit.ly). Users can register, login, and create new tiny URL's. \n                  A user can view their saved URLs when logged in.\n                </CardText>\n                <CardActions border>\n                  <Button\n                    href=\"https://github.com/at0082a/tiny-app\"\n                    target=\"_blank\"\n                    colored\n                  >\n                    GitHub\n                  </Button>\n                </CardActions>\n                <CardMenu style={{ color: \"#fff\" }} />\n              </Card>\n            </Cell>\n            <Cell col={3}>\n              <Card\n                shadow={5}\n                style={{\n                  display: \"flex\",\n                  minWidth: \"450\",\n                  margin: \"auto\",\n                  height: \"400px\"\n                }}\n              >\n                <CardTitle\n                  style={{\n                    display: \"flex\",\n                    color: \"black\",\n                    height: \"230px\",\n                    background:\n                      \"url(https://www.cherwell.com/-/media/cherwell/images/tap-logos/asset_logo_amazon-web-service.png) center / cover\"\n                  }}\n                >\n                  Haven\n                </CardTitle>\n                <CardText>\n                  Haven is an open source Smart Home app built to automate and\n                  control common household processes. The first feature\n                  implementation of the app is a camera video feed. The camera\n                  can be placed anywhere in your home. Video feeds are stored in AWS\n                </CardText>\n                <CardActions border>\n                  <Button\n                    href=\"https://github.com/adrianaj24/home-assistant\"\n                    target=\"_blank\"\n                    colored\n                  >\n                    GitHub\n                  </Button>\n                </CardActions>\n                <CardMenu style={{ color: \"#fff\" }} />\n              </Card>\n            </Cell>\n            <Cell col={3}>\n              <Card\n                shadow={5}\n                style={{\n                  display: \"flex\",\n                  minWidth: \"450\",\n                  margin: \"auto\",\n                  height: \"400px\"\n                }}\n              >\n                <CardTitle\n                  style={{\n                    display: \"flex\",\n                    color: \"black\",\n                    height: \"250px\",\n                    background:\n                      \"url(https://xebialabs.com/wp-content/uploads/files/tool-chest/mongodb.jpg) center / cover\"\n                  }}\n                >\n                  Tweeter\n                </CardTitle>\n                <CardText>\n                  Single-page Twitter clone powered by AJAX that helped refine\n                  front-end development skills and leverage the asynchronous\n                  power of JavaScript\n                </CardText>\n                <CardActions border>\n                  <Button\n                    href=\"https://github.com/adrianaj24/tweeter\"\n                    target=\"_blank\"\n                    colored\n                  >\n                    GitHub\n                  </Button>\n                </CardActions>\n                <CardMenu style={{ color: \"#fff\" }} />\n              </Card>\n            </Cell>\n          </Grid>\n        </div>\n    );\n  }\n}\nexport default Projects;","import React, {Component} from 'react'\nimport { Grid, Cell, List, ListItem, ListItemContent } from 'react-mdl'\n\nclass Contacts extends Component {\n  render () {\n    return (\n      <div className='contact-body'>\n        <Grid className='contact-grid'>\n          <Cell col={6}>\n            <h2>Alex Tilatti</h2>\n            <img className='contact-pic' src=\"http://streitcouncil.org/uploads/images/Alex%20Tilatti.jpg\"\n            alt='profile-pic'\n            />\n          </Cell>\n          <Cell col={6}>\n            <h2>Contact Information</h2>\n            <hr/>\n            <div className='contact-info'>\n              <List>\n                <ListItem>\n                  <ListItemContent className='contact-content'>\n                    <i className=\"fa fa-fax\" aria-hidden=\"true\"/>\n                    647-382-6761\n                  </ListItemContent>\n                </ListItem>\n                <ListItem>\n                  <ListItemContent className='contact-content'>\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\"/>\n                    alex.tilatti@gmail.com\n                  </ListItemContent>\n                </ListItem>\n              </List>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Contacts","import React from 'react';\nimport HomePage from './homePage.js'\nimport Projects from './projects.js'\nimport Contacts from './contact.js'\nimport { Route, Switch } from \"react-router\"\n\nconst Main = () => (\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route exact path=\"/contact\" component={Contacts} />\n    </Switch> \n);\n\nexport default Main","import React, {Component} from 'react';\nimport {Layout, Header, Navigation, Content} from 'react-mdl'\nimport Main from './components/main'\nimport HomePage from './components/homePage'\nimport './App.css';\nimport { Link } from 'react-router-dom'\n\nclass App extends Component {\n  render () {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header className='header-colour' title=\"Alex Tilatti\" scroll>\n            <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Header>\n        {/* <Drawer title=\"Title\">\n            <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Drawer> */}\n        <Content>\n            {/* <div className=\"page-content\" /> */}\n            {/* <HomePage/> */}\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n);\n}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename='/projects'> \n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}